
 build the project  using  maven 
 
 mvn clean install
 
 run the price app fisrt 
 
then build and run the stock price app

to acesss any API you need to authenticate fisrt with basic authentication 

username : admin
password : password


Create USER

http://localhost:8080/user

http method : POST

SAMPLE body 

{
    "name":"joseph",
    "subscriptionType":"GOLD"
}

curl --location --request POST 'http://localhost:8080/user' \
--header 'Content-Type: application/json' \
--header 'Authorization: Basic YWRtaW46cGFzc3dvcmQ=' \
--header 'Cookie: JSESSIONID=530FF5A81870898FC97C1AFD21E598D6' \
--data-raw '{
    "name":"joseph",
    "subscriptionType":"GOLD"
}'


Update Plan

http://localhost:8080/user

{
    "userId":"1",
    "subscriptionType":"GOLD"
}

curl --location --request PUT 'http://localhost:8080/user' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=530FF5A81870898FC97C1AFD21E598D6' \
--data-raw '{
    "userId":"2",
    "subscriptionType":"DEMO"
}'


Get the stock price for the period 

http://localhost:8080/stock/price?ticker=JPMC:INC&fromDate=20220202&toDate=20220202

http method : GET 

header :userId


curl --location --request GET 'http://localhost:8080/stock/price?ticker=JPMC:INC9&fromDate=20220202&toDate=20220202' \
--header 'Content-Type: application/json' \
--header 'userId: 2' \
--header 'Authorization: Basic YWRtaW46cGFzc3dvcmQ=' \
--header 'Cookie: JSESSIONID=530FF5A81870898FC97C1AFD21E598D6' \
--data-raw '{
    "name":"joseph",
    "subscriptionType":"GOLD"
}'



Scope of improvemnts 

Document the API using swagger or Open API
Test covergae can be improved
Transaction management 
logging needs to added 

Scale 

In order to allow scaling may have to go for a service mesh option instaed using an application filter 
logs can be pushed to kafka streems and kafka connector can write to the DB.








